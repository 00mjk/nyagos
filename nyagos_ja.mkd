# NYAGOS - Nihongo Yet Another GOing Shell

NYAGOS は、go言語による Windows 用コマンドラインシェルです。
Nihongo とありますが、Unicode ベースなので、特に特定の自然言語に
特化しているわけではありません。

NYAGOS は、Windows の文化を尊重しつつ、UNIX に慣れた人が、
Windows であまりストレスを感じないような環境を構築するために
開発されているシェルです。bash など特定のシェルの互換を目指す
ものではありません。

## インストール

`nyagos.exe` 、`nyagos.lua`、`lua52.dll` を `%PATH%` の差す
ディレクトリに置いてください(同一のディレクトリに置いてください)。

カスタマイズ用ファイル `.nyagos` は、`%USERPROFILE%` か `%HOME%`
の差すディレクトリに置いて、必要に応じて修正してください。

## 起動オプション

### `-c "コマンド"`

コマンドを実行して、ただちに終了します。

### `-k "コマンド"`

コマンドを実行してから、通常起動します。

## 内蔵コマンド

### alias エイリアス名=定義

エイリアスを設定します。置換内容には以下のマクロが使えます。

* `$n` (n:数字) n番目の引数となります
* `$*` 全ての引数に置換されます。

置換内容が空の時はエイリアスを削除します。
= が無い場合は、その名前のエイリアスの内容を表示します。
引数が無い場合は、全エイリアスを一覧します。

デフォルトでは、以下が設定されています。

* `assoc=%COMSPEC% /c assoc`
* `attrib=%COMSPEC% /c attrib`
* `copy=%COMSPEC% /c copy`
* `del=%COMSPEC% /c del`
* `dir=%COMSPEC% /c dir`
* `for=%COMSPEC% /c for`
* `md=%COMSPEC% /c md`
* `mkdir=%COMSPEC% /c mkdir`
* `mklink=%COMSPEC% /c mklink`
* `move=%COMSPEC% /c move`
* `rd=%COMSPEC% /c rd`
* `ren=%COMSPEC% /c ren`
* `rename=%COMSPEC% /c rename`
* `rmdir=%COMSPEC% /c rmdir`
* `start=%COMSPEC% /c start`
* `type=%COMSPEC% /c type`

### cd ドライブ:ディレクトリ

現在のカレントドライブ、ディレクトリを変更します。
引数を省略すると、CMD.EXE と違い、環境変数 HOME 、あるいは 
USERPROFILE の差す先のディレクトリへ移動します。
CMD.EXE と違い、ドライブも同時に変更します。

### echo 文字列

文字列を標準出力に出力します。

### exit

NYAGOS を終了します。

### history [件数]

ヒストリ内容を表示します。件数を省略すると、最近の10件が表示されます。

### ls [-オプション] …

ディレクトリの一覧を表示します。
サポートしているオプションは以下の通りです。

* `-l` ロングフォーマットで一覧を表示します。
* `-F` ディレクトリ名の末尾に /  を、実行ファイル名の末尾に * を表示します。
* `-o` カラー化します
* `-a` . で始まるファイルも表示します。
* `-R` サブディレクトリ以下も表示します。

### pwd

現在のカレントドライブ + ディレクトリを表示します。

### set 変数名=値

環境変数に値を設定します。値に空白等を含む場合、CMD.EXE と同様に
「`set "変数名=値"`」とします。= 以降を省略すると、現在の変数の内容を表示します。

以下の変数は特別な意味を持ちます。

* `PROMPT` … プロンプトの文字列を設定します。`$P` 等のマクロ文字はCMD.EXE と同じです。shiena 様開発のモジュールによりエスケープシーケンスが使えます。

### source バッチファイル名

バッチファイルを実行します。CMD.EXE を使って実行しているので、
バッチファイル内で NYAGOS 内蔵コマンドを使うことは出来ませんが、
バッチファイルで変更された環境変数を NYAGOS 側へ取り込むことが
できます (NYAOS 3 の cmdsource 相当です)
コマンド名として「`source`」の代わりに「`.`」(ドット)一文字も使う
ことができます。

## 起動処理

1. 起動時に nyagos.exe と同じフォルダの nyagos.lua を読み込みます。nyagos.lua はLua で記述されており、ここから更にホームディレクトリ(%HOME% or %USERPROFILE%)の .nyagos の Lua コードを読み込みます(nyagos拡張は後述)。ユーザカスタマイズは、この .nyagos を編集して行うことができます。
2. 過去のヒストリ内容を `%APPDATA%\NYAOS_ORG\nyagos.history` から読み出します。NYAGOS 終了時には、このファイルに再び最後のヒストリ内容が書き出されます。

## コマンドライン置換

### ヒストリ置換

* `!!`  一つ前の入力文字列へ
* `!n`  最初から n 番目に入力文字列へ
* `!-n` n 個前に入力した文字列へ

以下のような語尾をつけることができます。

* `:0` コマンド名を引用する。
* `:m` m 番目の引数だけを引用する。
* `^`  最初の引数だけを抜き出す。
* `$`  最後の引数だけを抜き出す。
* `*`  全ての引数を引用する。

### 環境変数置換

* コマンドや引数先頭の `~` を `%HOME%` あるいは `%USERPROFILE%` に置換します。

## Lua拡張

nyagos では、EXE の本体の機能はコンパクトとし、便利機能は 
なるべく Lua で機能を拡張できるよう設計を進めています。
現在は以下のような関数が使用できます。

### `nyagos.alias("エイリアス名","置換コード")`

エイリアスを設定します。nyagos.lua 内で、簡略した

* `alias "エイリアス名=置換コード"`

が定義されています(Lua は引数が一つの場合は括弧を省略できます)。
置換コードでは「alias」コマンドと同様、`$1` や `$*` などのマクロが
使用可能です。

### `nyagos.setenv("環境変数名","変数内容")`

環境変数を設定します。nyagos.lua 内で、簡略した

* `set "変数名=定義内容"`
* `set "変数名+=追加定義"`

が定義されています(Lua は引数が一つの場合は括弧を省略できます)。
`set` は `nyagos.setenv` の処理に %変数名% の展開機能なども
組込まれています。

### `nyagos.exec("シェルコマンド")`

シェルコマンドを実行します。これも 

* `exec "シェルコマンド"`

が別名として使用できます。

## その他

NYAGOS は

- [go1.3 windows/386](http://golang.org)
- [Mingw-Gcc 4.8.1-4](http://mingw.org/)
- [LuaBinaries 5.2.3 for Win32 and MinGW](http://luabinaries.sourceforge.net/index.html)

を用いてビルドしています。言語標準以外では、以下のモジュールを
利用させていただいております。

- http://github.com/mattn/go-runewidth
- http://github.com/shiena/ansicolor
- http://github.com/atotto/clipboard

NYAGOS 本体のソースは、修正BSDライセンスにて配布・改変が可能です。

以上
